apiVersion: v1
kind: Pod
metadata:
  name: mess-backend
  labels:
    app: mess-backend
spec:
  containers:
  - image: jostrzol/mess-backend
    name: mess-backend
    ports:
    - containerPort: 80
      protocol: TCP
    env:
      - name: MESS_PORT
        value: "4000"
      - name: MESS_INCOMING_ORIGIN
        value: http://mess.westeurope.cloudapp.azure.com

---

apiVersion: v1
kind: Service
metadata:
  name: mess-backend
spec:
  selector:
    app: mess-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4000

---

apiVersion: v1
kind: Pod
metadata:
  name: mess-frontend
  labels:
    app: mess-frontend
spec:
  containers:
  - image: jostrzol/mess-frontend
    name: mess-frontend
    ports:
    - containerPort: 3000
      protocol: TCP
    env:
      - name: PORT
        value: "3000"
      - name: BACKEND_URL
        value: mess.westeurope.cloudapp.azure.com/api/

---

apiVersion: v1
kind: Service
metadata:
  name: mess-frontend
spec:
  selector:
    app: mess-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000

---

apiVersion: v1
kind: Pod
metadata:
  name: mess-proxy
  labels:
    app: mess-proxy
spec:
  containers:
  - image: jostrzol/mess-proxy
    name: mess-proxy
    ports:
    - containerPort: 80
      protocol: TCP
    env:
      - name: BACKEND_HOST
        value: "mess-backend"
      - name: FRONTEND_HOST
        value: "mess-frontend"

---

apiVersion: v1
kind: Service
metadata:
  name: mess-proxy
spec:
  type: LoadBalancer
  selector:
    app: mess-proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

# ---
#
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: aspnetapp
#   # annotations:
#   #   kubernetes.io/ingress.class: azure/application-gateway
# spec:
#   ingressClassName: azure-application-gateway
#   rules:
#   - http:
#       paths:
#       - path: /
#         backend:
#           service:
#             name: aspnetapp
#             port:
#               number: 80
#         pathType: Exact
